// Script para diagnosticar variables de entorno

// Cargar variables de entorno
import { config } from 'dotenv'
config()

console.log('üîç DIAGN√ìSTICO DE VARIABLES DE ENTORNO\n')
console.log('=' .repeat(60))

console.log('\nüìã Variables de IA:')
console.log('‚îÄ'.repeat(60))
console.log(`GROQ_API_KEY: ${process.env.GROQ_API_KEY ? '‚úÖ Configurada' : '‚ùå NO configurada'}`)
console.log(`GROQ_MODEL: ${process.env.GROQ_MODEL || '‚ùå No definida'}`)
console.log(`AI_FALLBACK_ENABLED: ${process.env.AI_FALLBACK_ENABLED || '‚ùå No definida'}`)
console.log(`AI_FALLBACK_ORDER: ${process.env.AI_FALLBACK_ORDER || '‚ùå No definida'}`)
console.log(`LM_STUDIO_URL: ${process.env.LM_STUDIO_URL || '‚ùå No definida'}`)
console.log(`LM_STUDIO_MODEL: ${process.env.LM_STUDIO_MODEL || '‚ùå No definida'}`)
console.log(`OPENAI_API_KEY: ${process.env.OPENAI_API_KEY ? '‚úÖ Configurada' : '‚ö†Ô∏è  No configurada (opcional)'}`)

console.log('\nüìä Resumen:')
console.log('‚îÄ'.repeat(60))

const groqOk = !!process.env.GROQ_API_KEY
const lmStudioOk = !!process.env.LM_STUDIO_URL
const openaiOk = !!process.env.OPENAI_API_KEY

console.log(`Groq: ${groqOk ? '‚úÖ' : '‚ùå'}`)
console.log(`LM Studio: ${lmStudioOk ? '‚úÖ' : '‚ùå'}`)
console.log(`OpenAI: ${openaiOk ? '‚úÖ' : '‚ö†Ô∏è  (opcional)'}`)

console.log('\nüí° Recomendaciones:')
console.log('‚îÄ'.repeat(60))

if (!groqOk) {
  console.log('‚ùå GROQ_API_KEY no est√° configurada')
  console.log('   Soluci√≥n: Verifica tu archivo .env')
}

if (!lmStudioOk) {
  console.log('‚ùå LM_STUDIO_URL no est√° configurada')
  console.log('   Soluci√≥n: Verifica tu archivo .env')
}

if (!groqOk && !lmStudioOk && !openaiOk) {
  console.log('\n‚ö†Ô∏è  NING√öN PROVIDER CONFIGURADO')
  console.log('   El bot NO podr√° responder mensajes')
  console.log('   Configura al menos uno en el archivo .env')
}

console.log('\n' + '='.repeat(60))
