/**
 * üß™ TEST: Verificar env√≠o de emails
 * Diagnosticar por qu√© no llegan los correos de verificaci√≥n
 */

import { EmailService } from '../src/lib/email-service'

async function testEmailVerificacion() {
  console.log('üìß PROBANDO SISTEMA DE EMAILS\n')
  console.log('='.repeat(70))
  
  try {
    // 1. Verificar configuraci√≥n
    console.log('\n1Ô∏è‚É£ VERIFICANDO CONFIGURACI√ìN')
    console.log('-'.repeat(70))
    
    const resendKey = process.env.RESEND_API_KEY
    const emailFrom = process.env.EMAIL_FROM || process.env.RESEND_FROM_EMAIL
    
    console.log(`RESEND_API_KEY: ${resendKey ? '‚úÖ Configurada' : '‚ùå NO configurada'}`)
    console.log(`EMAIL_FROM: ${emailFrom || '‚ùå NO configurado'}`)
    
    if (!resendKey) {
      console.log('\n‚ùå ERROR: RESEND_API_KEY no est√° configurada')
      console.log('   Configura en .env:')
      console.log('   RESEND_API_KEY=re_xxx')
      return
    }
    
    if (!emailFrom) {
      console.log('\n‚ö†Ô∏è  ADVERTENCIA: EMAIL_FROM no est√° configurado')
      console.log('   Usando default de Resend')
    }
    
    // 2. Probar env√≠o de email de verificaci√≥n
    console.log('\n2Ô∏è‚É£ ENVIANDO EMAIL DE PRUEBA')
    console.log('-'.repeat(70))
    
    const testEmail = 'eladios.mena@gmail.com' // Tu email
    const testToken = 'test-token-' + Date.now()
    
    console.log(`Enviando a: ${testEmail}`)
    console.log(`Token: ${testToken}`)
    console.log('Enviando...')
    
    await EmailService.sendVerificationEmail(testEmail, testToken, 'Usuario de Prueba')
    
    console.log('\n‚úÖ EMAIL ENVIADO EXITOSAMENTE')
    console.log('\nüìù VERIFICA:')
    console.log('   1. Revisa tu bandeja de entrada')
    console.log('   2. Revisa spam/correo no deseado')
    console.log('   3. Puede tardar 1-2 minutos')
    
    // 3. Mostrar informaci√≥n del email
    console.log('\n3Ô∏è‚É£ INFORMACI√ìN DEL EMAIL')
    console.log('-'.repeat(70))
    console.log(`De: ${emailFrom}`)
    console.log(`Para: ${testEmail}`)
    console.log(`Asunto: Verifica tu correo electr√≥nico`)
    console.log(`Link: http://localhost:3000/verify-email?token=${testToken}`)
    
  } catch (error: any) {
    console.error('\n‚ùå ERROR AL ENVIAR EMAIL:', error.message)
    
    if (error.message.includes('401')) {
      console.log('\nüîë ERROR DE AUTENTICACI√ìN:')
      console.log('   - RESEND_API_KEY es inv√°lida')
      console.log('   - Verifica en https://resend.com/api-keys')
    } else if (error.message.includes('403')) {
      console.log('\nüö´ ERROR DE PERMISOS:')
      console.log('   - El dominio no est√° verificado en Resend')
      console.log('   - Usa onboarding@resend.dev para pruebas')
    } else if (error.message.includes('422')) {
      console.log('\nüìß ERROR DE EMAIL:')
      console.log('   - El email de destino es inv√°lido')
      console.log('   - O el formato del mensaje es incorrecto')
    }
    
    console.log('\nüìã DETALLES DEL ERROR:')
    console.log(error)
  }
  
  console.log('\n' + '='.repeat(70))
}

testEmailVerificacion()
