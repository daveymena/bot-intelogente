// üß™ SCRIPT DE PRUEBA DEL SISTEMA AVANZADO DE CONVERSACI√ìN

import { advancedConversationService } from '../src/lib/advanced-conversation-service';

const testUserId = 'test-user-123';

// Colores para la consola
const colors = {
  reset: '\x1b[0m',
  bright: '\x1b[1m',
  cyan: '\x1b[36m',
  yellow: '\x1b[33m',
  green: '\x1b[32m',
  red: '\x1b[31m'
};

function log(label: string, message: string, color: string = colors.reset) {
  console.log(`${color}${colors.bright}${label}:${colors.reset} ${message}\n`);
}

async function testConversation(userMessage: string) {
  log('üë§ CLIENTE', userMessage, colors.cyan);
  const response = await advancedConversationService.processMessage(testUserId, userMessage);
  log('ü§ñ BOT', response, colors.green);
  console.log('‚îÄ'.repeat(80) + '\n');
}

async function runTests() {
  console.log('\n' + '‚ïê'.repeat(80));
  console.log('üéØ PRUEBA DEL SISTEMA AVANZADO DE CONVERSACI√ìN');
  console.log('‚ïê'.repeat(80) + '\n');

  // ============================================
  // ESCENARIO 1: Cliente busca laptop para estudiar
  // ============================================
  console.log('üìã ESCENARIO 1: Cliente busca laptop para estudiar\n');
  
  await testConversation('Hola');
  await testConversation('Busco una laptop');
  await testConversation('Para la universidad');
  await testConversation('Cu√°nto cuesta?');
  await testConversation('Muy cara');
  await testConversation('Tiene garant√≠a?');
  await testConversation('Cuando puedo recogerla?');

  // ============================================
  // ESCENARIO 2: Cliente con objeciones
  // ============================================
  console.log('\nüìã ESCENARIO 2: Cliente con objeciones de precio\n');
  
  await testConversation('Buenos d√≠as');
  await testConversation('PC para jugar');
  await testConversation('Cu√°nto vale?');
  await testConversation('Muy caro');
  await testConversation('En otro lado est√° m√°s barato');
  await testConversation('Lo voy a pensar');
  await testConversation('Aceptan tarjeta?');

  // ============================================
  // ESCENARIO 3: Cliente con preguntas confusas
  // ============================================
  console.log('\nüìã ESCENARIO 3: Cliente con preguntas confusas\n');
  
  await testConversation('Hola');
  await testConversation('Qu√© tienen?');
  await testConversation('Y eso?');
  await testConversation('123');
  await testConversation('mmm');
  await testConversation('Tienen stock?');

  // ============================================
  // ESCENARIO 4: Cliente interesado en gaming
  // ============================================
  console.log('\nüìã ESCENARIO 4: Cliente gamer\n');
  
  await testConversation('Buenas');
  await testConversation('PC gaming');
  await testConversation('Para Fortnite');
  await testConversation('Se puede mejorar despu√©s?');
  await testConversation('O me compro una PS5');
  await testConversation('D√≥nde est√°n ubicados?');

  // ============================================
  // ESCENARIO 5: Cliente busca algo econ√≥mico
  // ============================================
  console.log('\nüìã ESCENARIO 5: Cliente con presupuesto limitado\n');
  
  await testConversation('Hola');
  await testConversation('Algo barato');
  await testConversation('Para trabajar desde casa');
  await testConversation('Es usada, no s√©...');
  await testConversation('Cu√°nto es lo m√≠nimo de apartado?');
  await testConversation('Formas de pago?');

  // ============================================
  // ESCENARIO 6: Preguntas frecuentes
  // ============================================
  console.log('\nüìã ESCENARIO 6: Preguntas frecuentes\n');
  
  await testConversation('Tienen garant√≠a?');
  await testConversation('Hacen env√≠os?');
  await testConversation('Pol√≠tica de devoluci√≥n?');
  await testConversation('D√≥nde est√°n ubicados?');

  // ============================================
  // ESCENARIO 7: Cliente indeciso
  // ============================================
  console.log('\nüìã ESCENARIO 7: Cliente indeciso\n');
  
  await testConversation('Hola');
  await testConversation('Laptop');
  await testConversation('No s√© cu√°l');
  await testConversation('Cu√°nto cuestan?');
  await testConversation('D√©jame pensarlo');
  await testConversation('Vuelvo despu√©s');

  console.log('\n' + '‚ïê'.repeat(80));
  console.log('‚úÖ PRUEBAS COMPLETADAS');
  console.log('‚ïê'.repeat(80) + '\n');

  console.log('üìä RESUMEN:');
  console.log('- El bot NUNCA se qued√≥ sin respuesta');
  console.log('- Manej√≥ todas las objeciones');
  console.log('- Redirigi√≥ conversaciones confusas');
  console.log('- Mantuvo el control en todo momento');
  console.log('- Siempre cerr√≥ hacia una acci√≥n concreta\n');
}

// Ejecutar pruebas
runTests().catch(console.error);
