/**
 * üìß ENVIAR EMAIL DE PRUEBA PROFESIONAL
 * Env√≠a un email de prueba a daveymena16@gmail.com
 */

// IMPORTANTE: Cargar variables de entorno ANTES de cualquier import
import dotenv from 'dotenv'
dotenv.config()

// Verificar que la API Key se carg√≥ correctamente
console.log('üîç Verificando variables de entorno...')
console.log('RESEND_API_KEY:', process.env.RESEND_API_KEY ? '‚úÖ Configurado' : '‚ùå No encontrado')
console.log('RESEND_FROM_EMAIL:', process.env.RESEND_FROM_EMAIL || 'onboarding@resend.dev')
console.log('')

import { EmailService } from '../src/lib/email-service'

async function enviarEmailPrueba() {
  console.log('üìß ENVIANDO EMAIL DE PRUEBA PROFESIONAL\n')
  console.log('=' .repeat(70))

  const emailDestino = 'daveymena16@gmail.com'
  const nombreUsuario = 'Davey Mena'

  console.log(`\nüì¨ Destinatario: ${emailDestino}`)
  console.log(`üë§ Nombre: ${nombreUsuario}\n`)

  // Verificar configuraci√≥n
  const hasResendKey = !!process.env.RESEND_API_KEY
  
  if (!hasResendKey) {
    console.log('‚ö†Ô∏è  RESEND_API_KEY no configurado')
    console.log('\nüí° El email se simular√° en consola')
    console.log('   Para enviar email real:')
    console.log('   1. Crea cuenta en https://resend.com')
    console.log('   2. Obt√©n tu API Key')
    console.log('   3. Agr√©gala en .env: RESEND_API_KEY=re_xxx\n')
  } else {
    console.log('‚úÖ RESEND_API_KEY configurado')
    console.log('üì§ Enviando email real...\n')
  }

  console.log('‚îÄ'.repeat(70))

  // Enviar email de prueba profesional
  console.log('\nüìß Enviando email de prueba profesional...\n')
  
  const enviadoPrueba = await EmailService.sendTestEmail(emailDestino)

  if (enviadoPrueba) {
    console.log('‚úÖ Email de prueba enviado exitosamente!')
    
    if (hasResendKey) {
      console.log('\nüì¨ REVISA TU BANDEJA DE ENTRADA:')
      console.log(`   Email: ${emailDestino}`)
      console.log('   Asunto: ‚úÖ Email de Prueba - Smart Sales Bot Pro')
      console.log('\n‚ú® El email incluye:')
      console.log('   ‚úÖ Dise√±o HTML profesional y empresarial')
      console.log('   ‚úÖ Gradientes modernos y colores corporativos')
      console.log('   ‚úÖ Estad√≠sticas del sistema en tiempo real')
      console.log('   ‚úÖ Grid de caracter√≠sticas principales')
      console.log('   ‚úÖ Botones interactivos con hover effects')
      console.log('   ‚úÖ Footer profesional con links')
      console.log('   ‚úÖ Responsive (se ve perfecto en m√≥vil)')
      console.log('\nüí° Tambi√©n revisa:')
      console.log('   - Carpeta de Spam')
      console.log('   - Carpeta de Promociones')
      console.log('   - Carpeta de Social')
    } else {
      console.log('\nüí° Email simulado (no enviado realmente)')
      console.log('   Configura RESEND_API_KEY para enviar emails reales')
    }
  } else {
    console.log('‚ùå Error enviando email de prueba')
  }

  console.log('\n' + '‚îÄ'.repeat(70))

  // Esperar un poco
  await new Promise(resolve => setTimeout(resolve, 2000))

  // Enviar email de verificaci√≥n
  console.log('\nüìß Enviando email de verificaci√≥n...\n')
  
  const tokenPrueba = 'test-token-' + Date.now()
  const enviado = await EmailService.sendVerificationEmail(
    emailDestino,
    tokenPrueba,
    nombreUsuario
  )

  if (enviado) {
    console.log('‚úÖ Email de verificaci√≥n enviado!')
    
    if (hasResendKey) {
      console.log('\nüì¨ REVISA TU BANDEJA:')
      console.log(`   Email: ${emailDestino}`)
      console.log('   Asunto: ü§ñ Verifica tu cuenta de Smart Sales Bot')
    }
  } else {
    console.log('‚ùå Error enviando email de verificaci√≥n')
  }

  console.log('\n' + '‚îÄ'.repeat(70))

  // Esperar un poco
  await new Promise(resolve => setTimeout(resolve, 2000))

  // Enviar email de bienvenida
  console.log('\nüìß Enviando email de bienvenida...\n')
  
  const enviadoBienvenida = await EmailService.sendWelcomeEmail(
    emailDestino,
    nombreUsuario
  )

  if (enviadoBienvenida) {
    console.log('‚úÖ Email de bienvenida enviado!')
    
    if (hasResendKey) {
      console.log('\nüì¨ REVISA TU BANDEJA:')
      console.log(`   Email: ${emailDestino}`)
      console.log('   Asunto: üéâ ¬°Bienvenido a Smart Sales Bot Pro!')
    }
  } else {
    console.log('‚ùå Error enviando email de bienvenida')
  }

  // Resumen final
  console.log('\n\n' + '='.repeat(70))
  console.log('\nüìä RESUMEN:\n')
  
  if (enviadoPrueba && enviado && enviadoBienvenida) {
    console.log('‚úÖ Los 3 emails enviados correctamente')
    
    if (hasResendKey) {
      console.log('\nüìß EMAILS ENVIADOS A: daveymena16@gmail.com')
      console.log('\nüì¨ Revisa tu bandeja de entrada')
      console.log('   (Tambi√©n revisa spam/promociones)')
      console.log('\n‚ú® Los emails incluyen:')
      console.log('   ‚úÖ Dise√±o HTML profesional y empresarial')
      console.log('   ‚úÖ Gradientes modernos y colores corporativos')
      console.log('   ‚úÖ Estad√≠sticas y m√©tricas visuales')
      console.log('   ‚úÖ Botones interactivos con efectos hover')
      console.log('   ‚úÖ Grid de caracter√≠sticas con iconos')
      console.log('   ‚úÖ Footer profesional con links sociales')
      console.log('   ‚úÖ Responsive (perfecto en m√≥vil y desktop)')
      console.log('   ‚úÖ Branding consistente')
      console.log('\nüé® Dise√±o empresarial de alta calidad')
      console.log('   - Paleta de colores verde corporativo')
      console.log('   - Tipograf√≠a moderna (SF Pro, Segoe UI)')
      console.log('   - Sombras y efectos sutiles')
      console.log('   - Layout limpio y profesional')
    } else {
      console.log('\nüí° EMAILS SIMULADOS (no enviados realmente)')
      console.log('\nüìù Para enviar emails reales:')
      console.log('   1. Ve a https://resend.com')
      console.log('   2. Crea cuenta gratis')
      console.log('   3. Obt√©n tu API Key')
      console.log('   4. Agr√©gala en .env:')
      console.log('      RESEND_API_KEY=re_xxxxxxxxxx')
      console.log('   5. Ejecuta este script de nuevo')
    }
  } else {
    console.log('‚ö†Ô∏è  Algunos emails fallaron')
  }

  console.log('\n' + '='.repeat(70))
}

// Ejecutar
enviarEmailPrueba()
  .then(() => {
    console.log('\n‚úÖ Script finalizado')
    process.exit(0)
  })
  .catch((error) => {
    console.error('\n‚ùå Error:', error)
    process.exit(1)
  })
